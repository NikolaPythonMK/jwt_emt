import jwt_decode from 'jwt-decode';

export const setAuthToken = (token) => {
  if (token) {
    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;
  } else {
    delete axios.defaults.headers.common['Authorization'];
  }
};

export const decodeToken = (token) => {
  return jwt_decode(token);
};
import React, { useState } from 'react';
import axios from 'axios';
import { setAuthToken } from './auth';

const Login = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const response = await axios.post('/api/login', { email, password });
      const { token } = response.data;

      // Save the token in localStorage
      localStorage.setItem('jwtToken', token);

      // Set the token as the default Authorization header for subsequent API requests
      setAuthToken(token);

      // TODO: Redirect the user to the authenticated area
    } catch (error) {
      console.error('Login failed', error);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <input
        type="email"
        placeholder="Email"
        value={email}
        onChange={(e) => setEmail(e.target.value)}
      />
      <input
        type="password"
        placeholder="Password"
        value={password}
        onChange={(e) => setPassword(e.target.value)}
      />
      <button type="submit">Login</button>
    </form>
  );
};

export default Login;

import React from 'react';
import Login from './Login';

const App = () => {
  return (
    <div>
      <h1>My App</h1>
      <Login />
    </div>
  );
};

export default App;
